<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Chartlets | Adam Mark]]></title>
  <link href="http://www.adammark.net/blog/categories/chartlets/atom.xml" rel="self"/>
  <link href="http://www.adammark.net/"/>
  <updated>2013-05-10T14:58:18-04:00</updated>
  <id>http://www.adammark.net/</id>
  <author>
    <name><![CDATA[Adam Mark]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introducing Chartlets: Tiny charts for tablet and mobile web apps]]></title>
    <link href="http://www.adammark.net/blog/2013/05/10/introducing-chartlets-tiny-charts-for-tablet-and-mobile-web-apps/"/>
    <updated>2013-05-10T14:03:00-04:00</updated>
    <id>http://www.adammark.net/blog/2013/05/10/introducing-chartlets-tiny-charts-for-tablet-and-mobile-web-apps</id>
    <content type="html"><![CDATA[<p>Choosing the right tool (or <em>tools</em>) for data visualization suddenly got complicated.
Flash is out, <a href="https://developer.mozilla.org/en-US/docs/SVG">SVG</a> and <a href="https://developer.mozilla.org/en-US/docs/HTML/Canvas/Tutorial">Canvas</a> are in, and a <a href="http://selection.datavisualization.ch/">mess of libraries</a> have
made it possible to offload expensive rendering tasks from the server to the client.</p>

<p>My favorite libraries are <a href="http://d3js.org/">D3.js</a> for SVG and <a href="http://chartjs.org">Chart.js</a> for Canvas. D3.js is
particularly sophisticated and makes few assumptions about how to render data; its
primary goal is to bind data to DOM elements and help manipulate elements. Chart.js
is great for rendering simple, static charts.</p>

<p>Most libraries are biased toward <em>big</em> presentations. I went the other way when I
created <a href="http://chartlets.com">Chartlets</a>, a library for making minimalist charts for mobile and tablet
web apps:</p>

<p><img src="/images/work/chartlets-samples-640x480.png" alt="" /></p>

<p>Not only are Chartlets small, the library itself weighs in at under 3K. And the API
is simple by design, requiring no programming knowledge to render a basic chart.
Chartlets can be defined entirely in HTML:</p>

<pre><code>&lt;canvas class="chartlet" width="65" height="65" 
  data-type="pie" data-sets="[1 2 3 4 5]" data-opts="theme:money"&gt;&lt;/canvas&gt;
</code></pre>

<p>Check out the full docs and examples at <a href="http://chartlets.com">chartlets.com</a>.</p>
]]></content>
  </entry>
  
</feed>
